{"namespace":"flow-1","canvas":{"cameraX":95,"cameraY":2504,"padding":45,"pageSizeX":800,"pageSizeY":800},"nodes":[{"id":"1","type":"action","x0":908,"y0":446,"x1":1339,"y1":783,"payload":{"name":"T1587.001: Develop Capabilities: Malware","description":"Attackers embedded their malicious payload on a legitimate component of the SolarWinds Orion Platform software. This component is a DLL library, SolarWinds.Orion.Core.BusinessLayer.dll.","timestamp":"","reference":"","succeeded":0,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},{"id":"2","type":"asset","x0":983,"y0":985,"x1":1258,"y1":1081,"payload":{"state":"Compromised"}},{"id":"3","type":"data_property","x0":1365,"y0":795,"x1":1647,"y1":891,"payload":{"target":"SolarWinds DLL library"}},{"id":"4","type":"action","x0":465,"y0":898.9166717529297,"x1":896,"y1":1235,"payload":{"name":"T1583.003: Acquire Infrastructure: Virtual Private Server","description":"Adversaries rent Virtual Private Servers (VPSs) that can be used during the attack campaign.","timestamp":"","reference":"","succeeded":0,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},{"id":"5","type":"action","x0":1367,"y0":958,"x1":1798,"y1":1295,"payload":{"name":"T1195.002: Supply Chain Compromise: Compromise Software Supply Chain","description":"In the software supply chain compromise attack technique, adversaries modify software prior to receipt by a final user. According to SolarWinds security advisory, attackers backdoored three versions of the Orion Platform software: 2019.4 HF 5, 2020.2 with no hotfix, and 2020.2 HF 1.","timestamp":"","reference":"","succeeded":0,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},{"id":"6","type":"action","x0":901,"y0":1265.4166870117188,"x1":1332,"y1":1602,"payload":{"name":"T1569.002: System Services: Service Execution","description":"Adversaries execute their malware as a Windows service. During the installation of the SolarWinds application or update, the tampered DLL file is loaded by the legitimate SolarWinds.BusinessLayerHost.exe or SolarWinds.BusinessLayerHostx64.exe and installed as a Windows service.","timestamp":"","reference":"","succeeded":0,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},{"id":"7","type":"asset","x0":1450.1666870117188,"y0":1314.5833740234375,"x1":1725,"y1":1410,"payload":{"state":"Loaded"}},{"id":"8","type":"data_property","x0":1818.1666870117188,"y0":1313.5833740234375,"x1":2100,"y1":1409,"payload":{"target":"SolarWinds DLL library"}},{"id":"9","type":"asset","x0":1449.1666870117188,"y0":1467.5833740234375,"x1":1724,"y1":1563,"payload":{"state":"Installed"}},{"id":"10","type":"data_property","x0":1817.1666870117188,"y0":1467.5833740234375,"x1":2099,"y1":1563,"payload":{"target":"Windows service"}},{"id":"11","type":"action","x0":1183.1666870117188,"y0":1737.5833740234375,"x1":1614,"y1":2074,"payload":{"name":"T1543.003: Create or Modify System Process: Windows Service","description":"When Windows boots up, the malicious code starts as a service. The TEARDROP malware loaded by the modified DLL  runs as a service in the background.","timestamp":"","reference":"","succeeded":0,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},{"id":"12","type":"asset","x0":1733.75,"y0":1967.75,"x1":2008,"y1":2063,"payload":{"state":"Loaded"}},{"id":"13","type":"data_property","x0":1732.75,"y0":1737.75,"x1":2014,"y1":1833,"payload":{"target":"TEARDROP malware"}},{"id":"14","type":"action","x0":386.75,"y0":2321.5,"x1":817,"y1":2658,"payload":{"name":"T1078: Valid Accounts","description":"Threat actors used multiple valid accounts for lateral movement in this attack campaign.","timestamp":"","reference":"","succeeded":0,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},{"id":"16","type":"asset","x0":972.75,"y0":2497.75,"x1":1247,"y1":2593,"payload":{"state":"Pivoted"}},{"id":"17","type":"data_property","x0":970.75,"y0":2262.75,"x1":1252,"y1":2358,"payload":{"target":"Multiple Accounts"}},{"id":"18","type":"action","x0":1396.75,"y0":2289,"x1":1827,"y1":2626,"payload":{"name":"T1553.002: Subvert Trust Controls: Code Signing","description":"To bypass application control technologies, adversaries sign their malware with valid signatures by creating, acquiring, or stealing code-signing materials. In the SolarWinds incident, attackers have compromised digital certificates of SolarWinds.","timestamp":"","reference":"","succeeded":0,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},{"id":"20","type":"asset","x0":1949.75,"y0":2528,"x1":2224,"y1":2624,"payload":{"state":"Compromised"}},{"id":"21","type":"data_property","x0":1942.75,"y0":2303,"x1":2224,"y1":2399,"payload":{"target":"Digital certificates of SolarWinds"}},{"id":"22","type":"action","x0":373.75,"y0":2751.75,"x1":804,"y1":3088,"payload":{"name":"T1036.005: Masquerading: Match Legitimate Name or Location","description":"According to the FireEye report, the threat actor of the SolarWinds breach uses a legitimate hostname found within the victimâ€™s environment as the hostname on their Command and Control (C2) infrastructure to avoid detection.  Moreover, the malware masquerades its C2 traffic as the Orion Improvement Program (OIP) protocol. ","timestamp":"","reference":"","succeeded":0,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},{"id":"24","type":"asset","x0":950.75,"y0":3013,"x1":1225,"y1":3109,"payload":{"state":"Used"}},{"id":"25","type":"data_property","x0":954.75,"y0":2761,"x1":1236,"y1":2857,"payload":{"target":"Legitimate hostname"}},{"id":"26","type":"action","x0":1404.2999877929688,"y0":2746.966552734375,"x1":1835,"y1":3083,"payload":{"name":"T1036.003: Masquerading: Rename System Utilities","description":"To avoid name-based detection, adversaries may rename system utilities. Moreover, the threat actor replaces a legitimate utility with theirs, executes their payload, and then restores the legitimate original file","timestamp":"","reference":"","succeeded":0,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},{"id":"27","type":"asset","x0":2049.616668701172,"y0":2966.966552734375,"x1":2324,"y1":3062,"payload":{"state":"Renamed"}},{"id":"28","type":"data_property","x0":2047.6166687011719,"y0":2736.966552734375,"x1":2329,"y1":2832,"payload":{"target":"System utilities"}},{"id":"29","type":"action","x0":1098.6166687011719,"y0":3162.4833984375,"x1":1529,"y1":3499,"payload":{"name":"T1036.004: Masquerading: Masquerade Task or Service","description":"Adversaries masquerade the name of a task/service with the name of a legitimate task/service to make it appear benign and evade detection","timestamp":"","reference":"","succeeded":0,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},{"id":"30","type":"data_property","x0":1652.5,"y0":3151,"x1":1934,"y1":3247,"payload":{"target":"Name of a task/service"}},{"id":"32","type":"asset","x0":1661.5,"y0":3360,"x1":1936,"y1":3456,"payload":{"state":"Masquerade"}},{"id":"35","type":"action","x0":1091.0833282470703,"y0":3592.61669921875,"x1":1522,"y1":3929,"payload":{"name":"T1057 Process Discovery","description":"Adversaries obtain information about running processes on a system to understand common software and applications running on systems within the network. The threat actor gets a list of processes to shape follow-on behaviors.","timestamp":"","reference":"","succeeded":0,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},{"id":"36","type":"action","x0":1094.0833282470703,"y0":4046.13330078125,"x1":1525,"y1":4383,"payload":{"name":"T1012: Query Registry","description":"Adversaries query the Windows Registry to get information about the system, configuration, and installed software. The threat actor obtains Cryptographic Machine GUID by querying the value of MachineGuid in the  HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography key to generate a unique userID for each victim.","timestamp":"","reference":"","succeeded":0,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},{"id":"38","type":"asset","x0":1612.0833282470703,"y0":3796.13330078125,"x1":1887,"y1":3892,"payload":{"state":"Discovered"}},{"id":"39","type":"data_property","x0":1604.0833282470703,"y0":3594.13330078125,"x1":1886,"y1":3690,"payload":{"target":"Running processes"}},{"id":"40","type":"asset","x0":1625,"y0":4252,"x1":1900,"y1":4348,"payload":{"state":"Obtained"}},{"id":"43","type":"data_property","x0":1619,"y0":4053,"x1":1901,"y1":4149,"payload":{"target":"Cryptographic Machine GUID"}},{"id":"44","type":"action","x0":1124,"y0":4468.666748046875,"x1":1555,"y1":4805,"payload":{"name":"T1021: Remote Services","description":"adversaries use valid accounts to log into a remote service, such as remote desktop protocol (RDP), SSH, and VNC. The threat actor uses valid accounts and legitimate remote access to move laterally in the target network.","timestamp":"","reference":"","succeeded":0,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},{"id":"46","type":"action","x0":1121,"y0":4877.2001953125,"x1":1552,"y1":5214,"payload":{"name":"T1568.002: Dynamic Resolution: Domain Generation Algorithms","description":"Adversaries use Domain Generation Algorithms (DGAs) to dynamically generate a C2 domain rather than relying on a list of static IP addresses or domains. The backdoor used in this attack campaign uses a DGA to determine its C2 server.","timestamp":"","reference":"","succeeded":0,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},{"id":"47","type":"data_property","x0":1653.6166687011719,"y0":4493,"x1":1935,"y1":4589,"payload":{"target":"Valid accounts"}},{"id":"49","type":"asset","x0":1660.6166687011719,"y0":4677,"x1":1935,"y1":4773,"payload":{"state":"Moved Laterally"}},{"id":"50","type":"asset","x0":1634.6166687011719,"y0":5064,"x1":1909,"y1":5160,"payload":{"state":"Generated"}},{"id":"51","type":"data_property","x0":1633.6166687011719,"y0":4855,"x1":1915,"y1":4951,"payload":{"target":"C2 domain"}},{"id":"52","type":"action","x0":1122.6166687011719,"y0":5340.2001953125,"x1":1553,"y1":5677,"payload":{"name":"T1041: Exfiltration Over C2 Channel","description":"Adversaries steal data by exfiltrating it over an existing C2 channel.  The threat actor uses HTTP PUT or HTTP POST requests when the collected data is being exfiltrated to the C2 server. If the payload is bigger than 10000 bytes; the POST method is used. Otherwise, the PUT method is used.","timestamp":"","reference":"","succeeded":0,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},{"id":"53","type":"asset","x0":1650.6166687011719,"y0":5541.7666015625,"x1":1925,"y1":5637,"payload":{"state":"Exfiltrated"}},{"id":"54","type":"data_property","x0":1645.6166687011719,"y0":5343.7666015625,"x1":1927,"y1":5439,"payload":{"target":"Data"}}],"edges":[{"id":"1.2","sourceId":"1","targetId":"2","source":{"id":"1","type":"action","x0":908,"y0":446,"x1":1339,"y1":783,"payload":{"name":"T1587.001: Develop Capabilities: Malware","description":"Attackers embedded their malicious payload on a legitimate component of the SolarWinds Orion Platform software. This component is a DLL library, SolarWinds.Orion.Core.BusinessLayer.dll.","timestamp":"","reference":"","succeeded":0,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"target":{"id":"2","type":"asset","x0":983,"y0":985,"x1":1258,"y1":1081,"payload":{"state":"Compromised"}},"type":"relationship","payload":{"type":"state"}},{"id":"2.3","sourceId":"2","targetId":"3","source":{"id":"2","type":"asset","x0":983,"y0":985,"x1":1258,"y1":1081,"payload":{"state":"Compromised"}},"target":{"id":"3","type":"data_property","x0":1365,"y0":795,"x1":1647,"y1":891,"payload":{"target":"SolarWinds DLL library"}},"type":"data_property_type","payload":{"type":"state description"}},{"id":"5.2","sourceId":"5","targetId":"2","source":{"id":"5","type":"action","x0":1367,"y0":958,"x1":1798,"y1":1295,"payload":{"name":"T1195.002: Supply Chain Compromise: Compromise Software Supply Chain","description":"In the software supply chain compromise attack technique, adversaries modify software prior to receipt by a final user. According to SolarWinds security advisory, attackers backdoored three versions of the Orion Platform software: 2019.4 HF 5, 2020.2 with no hotfix, and 2020.2 HF 1.","timestamp":"","reference":"","succeeded":0,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"target":{"id":"2","type":"asset","x0":983,"y0":985,"x1":1258,"y1":1081,"payload":{"state":"Compromised"}},"type":"relationship","payload":{"type":"state"}},{"id":"2.6","sourceId":"2","targetId":"6","source":{"id":"2","type":"asset","x0":983,"y0":985,"x1":1258,"y1":1081,"payload":{"state":"Compromised"}},"target":{"id":"6","type":"action","x0":901,"y0":1265.4166870117188,"x1":1332,"y1":1602,"payload":{"name":"T1569.002: System Services: Service Execution","description":"Adversaries execute their malware as a Windows service. During the installation of the SolarWinds application or update, the tampered DLL file is loaded by the legitimate SolarWinds.BusinessLayerHost.exe or SolarWinds.BusinessLayerHostx64.exe and installed as a Windows service.","timestamp":"","reference":"","succeeded":0,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"type":"relationship","payload":{"type":"state change"}},{"id":"6.7","sourceId":"6","targetId":"7","source":{"id":"6","type":"action","x0":901,"y0":1265.4166870117188,"x1":1332,"y1":1602,"payload":{"name":"T1569.002: System Services: Service Execution","description":"Adversaries execute their malware as a Windows service. During the installation of the SolarWinds application or update, the tampered DLL file is loaded by the legitimate SolarWinds.BusinessLayerHost.exe or SolarWinds.BusinessLayerHostx64.exe and installed as a Windows service.","timestamp":"","reference":"","succeeded":0,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"target":{"id":"7","type":"asset","x0":1450.1666870117188,"y0":1314.5833740234375,"x1":1725,"y1":1410,"payload":{"state":"Loaded"}},"type":"relationship","payload":{"type":"state"}},{"id":"7.8","sourceId":"7","targetId":"8","source":{"id":"7","type":"asset","x0":1450.1666870117188,"y0":1314.5833740234375,"x1":1725,"y1":1410,"payload":{"state":"Loaded"}},"target":{"id":"8","type":"data_property","x0":1818.1666870117188,"y0":1313.5833740234375,"x1":2100,"y1":1409,"payload":{"target":"SolarWinds DLL library"}},"type":"data_property_type","payload":{"type":"state description"}},{"id":"6.9","sourceId":"6","targetId":"9","source":{"id":"6","type":"action","x0":901,"y0":1265.4166870117188,"x1":1332,"y1":1602,"payload":{"name":"T1569.002: System Services: Service Execution","description":"Adversaries execute their malware as a Windows service. During the installation of the SolarWinds application or update, the tampered DLL file is loaded by the legitimate SolarWinds.BusinessLayerHost.exe or SolarWinds.BusinessLayerHostx64.exe and installed as a Windows service.","timestamp":"","reference":"","succeeded":0,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"target":{"id":"9","type":"asset","x0":1449.1666870117188,"y0":1467.5833740234375,"x1":1724,"y1":1563,"payload":{"state":"Installed"}},"type":"relationship","payload":{"type":"state"}},{"id":"9.10","sourceId":"9","targetId":"10","source":{"id":"9","type":"asset","x0":1449.1666870117188,"y0":1467.5833740234375,"x1":1724,"y1":1563,"payload":{"state":"Installed"}},"target":{"id":"10","type":"data_property","x0":1817.1666870117188,"y0":1467.5833740234375,"x1":2099,"y1":1563,"payload":{"target":"Windows service"}},"type":"data_property_type","payload":{"type":"state description"}},{"id":"9.11","sourceId":"9","targetId":"11","source":{"id":"9","type":"asset","x0":1449.1666870117188,"y0":1467.5833740234375,"x1":1724,"y1":1563,"payload":{"state":"Installed"}},"target":{"id":"11","type":"action","x0":1183.1666870117188,"y0":1737.5833740234375,"x1":1614,"y1":2074,"payload":{"name":"T1543.003: Create or Modify System Process: Windows Service","description":"When Windows boots up, the malicious code starts as a service. The TEARDROP malware loaded by the modified DLL  runs as a service in the background.","timestamp":"","reference":"","succeeded":0,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"type":"relationship","payload":{"type":"state change"}},{"id":"11.12","sourceId":"11","targetId":"12","source":{"id":"11","type":"action","x0":1183.1666870117188,"y0":1737.5833740234375,"x1":1614,"y1":2074,"payload":{"name":"T1543.003: Create or Modify System Process: Windows Service","description":"When Windows boots up, the malicious code starts as a service. The TEARDROP malware loaded by the modified DLL  runs as a service in the background.","timestamp":"","reference":"","succeeded":0,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"target":{"id":"12","type":"asset","x0":1733.75,"y0":1967.75,"x1":2008,"y1":2063,"payload":{"state":"Loaded"}},"type":"relationship","payload":{"type":"state"}},{"id":"12.13","sourceId":"12","targetId":"13","source":{"id":"12","type":"asset","x0":1733.75,"y0":1967.75,"x1":2008,"y1":2063,"payload":{"state":"Loaded"}},"target":{"id":"13","type":"data_property","x0":1732.75,"y0":1737.75,"x1":2014,"y1":1833,"payload":{"target":"TEARDROP malware"}},"type":"data_property_type","payload":{"type":"state description"}},{"id":"14.16","sourceId":"14","targetId":"16","source":{"id":"14","type":"action","x0":386.75,"y0":2321.5,"x1":817,"y1":2658,"payload":{"name":"T1078: Valid Accounts","description":"Threat actors used multiple valid accounts for lateral movement in this attack campaign.","timestamp":"","reference":"","succeeded":0,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"target":{"id":"16","type":"asset","x0":972.75,"y0":2497.75,"x1":1247,"y1":2593,"payload":{"state":"Pivoted"}},"type":"relationship","payload":{"type":"state"}},{"id":"16.17","sourceId":"16","targetId":"17","source":{"id":"16","type":"asset","x0":972.75,"y0":2497.75,"x1":1247,"y1":2593,"payload":{"state":"Pivoted"}},"target":{"id":"17","type":"data_property","x0":970.75,"y0":2262.75,"x1":1252,"y1":2358,"payload":{"target":"Multiple Accounts"}},"type":"data_property_type","payload":{"type":"state description"}},{"id":"18.20","sourceId":"18","targetId":"20","source":{"id":"18","type":"action","x0":1396.75,"y0":2289,"x1":1827,"y1":2626,"payload":{"name":"T1553.002: Subvert Trust Controls: Code Signing","description":"To bypass application control technologies, adversaries sign their malware with valid signatures by creating, acquiring, or stealing code-signing materials. In the SolarWinds incident, attackers have compromised digital certificates of SolarWinds.","timestamp":"","reference":"","succeeded":0,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"target":{"id":"20","type":"asset","x0":1949.75,"y0":2528,"x1":2224,"y1":2624,"payload":{"state":"Compromised"}},"type":"relationship","payload":{"type":"state"}},{"id":"20.21","sourceId":"20","targetId":"21","source":{"id":"20","type":"asset","x0":1949.75,"y0":2528,"x1":2224,"y1":2624,"payload":{"state":"Compromised"}},"target":{"id":"21","type":"data_property","x0":1942.75,"y0":2303,"x1":2224,"y1":2399,"payload":{"target":"Digital certificates of SolarWinds"}},"type":"data_property_type","payload":{"type":"state description"}},{"id":"24.25","sourceId":"24","targetId":"25","source":{"id":"24","type":"asset","x0":950.75,"y0":3013,"x1":1225,"y1":3109,"payload":{"state":"Used"}},"target":{"id":"25","type":"data_property","x0":954.75,"y0":2761,"x1":1236,"y1":2857,"payload":{"target":"Legitimate hostname"}},"type":"data_property_type","payload":{"type":"state description"}},{"id":"22.24","sourceId":"22","targetId":"24","source":{"id":"22","type":"action","x0":373.75,"y0":2751.75,"x1":804,"y1":3088,"payload":{"name":"T1036.005: Masquerading: Match Legitimate Name or Location","description":"According to the FireEye report, the threat actor of the SolarWinds breach uses a legitimate hostname found within the victimâ€™s environment as the hostname on their Command and Control (C2) infrastructure to avoid detection.  Moreover, the malware masquerades its C2 traffic as the Orion Improvement Program (OIP) protocol. ","timestamp":"","reference":"","succeeded":0,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"target":{"id":"24","type":"asset","x0":950.75,"y0":3013,"x1":1225,"y1":3109,"payload":{"state":"Used"}},"type":"relationship","payload":{"type":"state"}},{"id":"27.28","sourceId":"27","targetId":"28","source":{"id":"27","type":"asset","x0":2049.616668701172,"y0":2966.966552734375,"x1":2324,"y1":3062,"payload":{"state":"Renamed"}},"target":{"id":"28","type":"data_property","x0":2047.6166687011719,"y0":2736.966552734375,"x1":2329,"y1":2832,"payload":{"target":"System utilities"}},"type":"data_property_type","payload":{"type":"state description"}},{"id":"26.27","sourceId":"26","targetId":"27","source":{"id":"26","type":"action","x0":1404.2999877929688,"y0":2746.966552734375,"x1":1835,"y1":3083,"payload":{"name":"T1036.003: Masquerading: Rename System Utilities","description":"To avoid name-based detection, adversaries may rename system utilities. Moreover, the threat actor replaces a legitimate utility with theirs, executes their payload, and then restores the legitimate original file","timestamp":"","reference":"","succeeded":0,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"target":{"id":"27","type":"asset","x0":2049.616668701172,"y0":2966.966552734375,"x1":2324,"y1":3062,"payload":{"state":"Renamed"}},"type":"relationship","payload":{"type":"state"}},{"id":"29.32","sourceId":"29","targetId":"32","source":{"id":"29","type":"action","x0":1098.6166687011719,"y0":3162.4833984375,"x1":1529,"y1":3499,"payload":{"name":"T1036.004: Masquerading: Masquerade Task or Service","description":"Adversaries masquerade the name of a task/service with the name of a legitimate task/service to make it appear benign and evade detection","timestamp":"","reference":"","succeeded":0,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"target":{"id":"32","type":"asset","x0":1661.5,"y0":3360,"x1":1936,"y1":3456,"payload":{"state":"Masquerade"}},"type":"relationship","payload":{"type":"state"}},{"id":"32.30","sourceId":"32","targetId":"30","source":{"id":"32","type":"asset","x0":1661.5,"y0":3360,"x1":1936,"y1":3456,"payload":{"state":"Masquerade"}},"target":{"id":"30","type":"data_property","x0":1652.5,"y0":3151,"x1":1934,"y1":3247,"payload":{"target":"Name of a task/service"}},"type":"data_property_type","payload":{"type":"state description"}},{"id":"35.38","sourceId":"35","targetId":"38","source":{"id":"35","type":"action","x0":1091.0833282470703,"y0":3592.61669921875,"x1":1522,"y1":3929,"payload":{"name":"T1057 Process Discovery","description":"Adversaries obtain information about running processes on a system to understand common software and applications running on systems within the network. The threat actor gets a list of processes to shape follow-on behaviors.","timestamp":"","reference":"","succeeded":0,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"target":{"id":"38","type":"asset","x0":1612.0833282470703,"y0":3796.13330078125,"x1":1887,"y1":3892,"payload":{"state":"Discovered"}},"type":"relationship","payload":{"type":"state"}},{"id":"38.39","sourceId":"38","targetId":"39","source":{"id":"38","type":"asset","x0":1612.0833282470703,"y0":3796.13330078125,"x1":1887,"y1":3892,"payload":{"state":"Discovered"}},"target":{"id":"39","type":"data_property","x0":1604.0833282470703,"y0":3594.13330078125,"x1":1886,"y1":3690,"payload":{"target":"Running processes"}},"type":"data_property_type","payload":{"type":"state description"}},{"id":"36.40","sourceId":"36","targetId":"40","source":{"id":"36","type":"action","x0":1094.0833282470703,"y0":4046.13330078125,"x1":1525,"y1":4383,"payload":{"name":"T1012: Query Registry","description":"Adversaries query the Windows Registry to get information about the system, configuration, and installed software. The threat actor obtains Cryptographic Machine GUID by querying the value of MachineGuid in the  HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography key to generate a unique userID for each victim.","timestamp":"","reference":"","succeeded":0,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"target":{"id":"40","type":"asset","x0":1625,"y0":4252,"x1":1900,"y1":4348,"payload":{"state":"Obtained"}},"type":"relationship","payload":{"type":"state"}},{"id":"40.43","sourceId":"40","targetId":"43","source":{"id":"40","type":"asset","x0":1625,"y0":4252,"x1":1900,"y1":4348,"payload":{"state":"Obtained"}},"target":{"id":"43","type":"data_property","x0":1619,"y0":4053,"x1":1901,"y1":4149,"payload":{"target":"Cryptographic Machine GUID"}},"type":"data_property_type","payload":{"type":"state description"}},{"id":"44.49","sourceId":"44","targetId":"49","source":{"id":"44","type":"action","x0":1124,"y0":4468.666748046875,"x1":1555,"y1":4805,"payload":{"name":"T1021: Remote Services","description":"adversaries use valid accounts to log into a remote service, such as remote desktop protocol (RDP), SSH, and VNC. The threat actor uses valid accounts and legitimate remote access to move laterally in the target network.","timestamp":"","reference":"","succeeded":0,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"target":{"id":"49","type":"asset","x0":1660.6166687011719,"y0":4677,"x1":1935,"y1":4773,"payload":{"state":"Moved Laterally"}},"type":"relationship","payload":{"type":"state"}},{"id":"49.47","sourceId":"49","targetId":"47","source":{"id":"49","type":"asset","x0":1660.6166687011719,"y0":4677,"x1":1935,"y1":4773,"payload":{"state":"Moved Laterally"}},"target":{"id":"47","type":"data_property","x0":1653.6166687011719,"y0":4493,"x1":1935,"y1":4589,"payload":{"target":"Valid accounts"}},"type":"data_property_type","payload":{"type":"state description"}},{"id":"46.50","sourceId":"46","targetId":"50","source":{"id":"46","type":"action","x0":1121,"y0":4877.2001953125,"x1":1552,"y1":5214,"payload":{"name":"T1568.002: Dynamic Resolution: Domain Generation Algorithms","description":"Adversaries use Domain Generation Algorithms (DGAs) to dynamically generate a C2 domain rather than relying on a list of static IP addresses or domains. The backdoor used in this attack campaign uses a DGA to determine its C2 server.","timestamp":"","reference":"","succeeded":0,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"target":{"id":"50","type":"asset","x0":1634.6166687011719,"y0":5064,"x1":1909,"y1":5160,"payload":{"state":"Generated"}},"type":"relationship","payload":{"type":"state"}},{"id":"50.51","sourceId":"50","targetId":"51","source":{"id":"50","type":"asset","x0":1634.6166687011719,"y0":5064,"x1":1909,"y1":5160,"payload":{"state":"Generated"}},"target":{"id":"51","type":"data_property","x0":1633.6166687011719,"y0":4855,"x1":1915,"y1":4951,"payload":{"target":"C2 domain"}},"type":"data_property_type","payload":{"type":"state description"}},{"id":"52.53","sourceId":"52","targetId":"53","source":{"id":"52","type":"action","x0":1122.6166687011719,"y0":5340.2001953125,"x1":1553,"y1":5677,"payload":{"name":"T1041: Exfiltration Over C2 Channel","description":"Adversaries steal data by exfiltrating it over an existing C2 channel.  The threat actor uses HTTP PUT or HTTP POST requests when the collected data is being exfiltrated to the C2 server. If the payload is bigger than 10000 bytes; the POST method is used. Otherwise, the PUT method is used.","timestamp":"","reference":"","succeeded":0,"confidence":0,"logic_operator_language":"","logic_operator":"AND"}},"target":{"id":"53","type":"asset","x0":1650.6166687011719,"y0":5541.7666015625,"x1":1925,"y1":5637,"payload":{"state":"Exfiltrated"}},"type":"relationship","payload":{"type":"state"}},{"id":"53.54","sourceId":"53","targetId":"54","source":{"id":"53","type":"asset","x0":1650.6166687011719,"y0":5541.7666015625,"x1":1925,"y1":5637,"payload":{"state":"Exfiltrated"}},"target":{"id":"54","type":"data_property","x0":1645.6166687011719,"y0":5343.7666015625,"x1":1927,"y1":5439,"payload":{"target":"Data"}},"type":"data_property_type","payload":{"type":"state description"}}],"schema":{"lists":{},"nodes":{"action":{"color":"#637bc9","outline":"#708ce6","subtype":null,"fields":{"name":{"type":"string","default":"","required":true},"description":{"type":"string","default":"","required":true},"timestamp":{"type":"datetime","default":""},"reference":{"type":"string","default":""},"succeeded":{"type":"number","default":0,"range":{"min":0,"max":1}},"confidence":{"type":"number","default":0,"range":{"min":0,"max":1}},"logic_operator_language":{"type":"string","default":""},"logic_operator":{"type":"string","default":"","required":true}}},"asset":{"color":"#c26130","outline":"#e57339","subtype":null,"fields":{"state":{"type":"string","default":""}}},"object_property_target":{"color":"#b62020","outline":"#d62727","subtype":null,"fields":{"target":{"type":"string","default":"","required":true}}},"data_property":{"color":"#31347c","outline":"#4246a6","subtype":null,"fields":{"target":{"type":"string","default":"","required":true}}}},"edges":{"relationship":{"color":"#4d4d4d","outline":"#696969","hasArrow":true,"hasDash":false,"fields":{"type":{"type":"string","default":"","required":true}}},"object_property_type":{"color":"#099","outline":"#00b8b8","hasArrow":true,"hasDash":false,"fields":{"type":{"type":"string","default":"","required":true}}},"data_property_type":{"color":"#31347c","outline":"#4246a6","hasArrow":true,"hasDash":false,"fields":{"type":{"type":"string","default":"","required":true}}}},"edgeRules":[{"source":"action","target":"asset","type":"relationship"},{"source":"action","target":"data_property","type":"data_property_type"},{"source":"action","target":"object_property_target","type":"object_property_type"},{"source":"asset","target":"action","type":"relationship"},{"source":"asset","target":"data_property","type":"data_property_type"},{"source":"asset","target":"object_property_target","type":"object_property_type"},{"source":"asset","target":"asset","type":"object_property_type"}]}}